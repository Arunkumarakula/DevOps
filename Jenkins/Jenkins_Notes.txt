
                                                 *JENKINS*

* Importance of Continuous Integration

  1.Improves Quality: Improves the quality by running multiple unit tests and analyzing various static code.
   
                      - Ensuring that the code is always reliable, maintainable, and bug-free.


  2.Increases Productivity: Automating the build of code saves a lot of time, thereby increasing productivity.


  3.Reduces Risk: Eliminates the risk of potential human errors by automating tasks.



* Features of Jenkins:

   1. Easy installation process

   2. Provides advanced security

   3. Optimized performance

   4. Upgrades are easily available

   5. Lightweight container support

   6. Distributed Team-Management



* What is Continuous Integration?

   Continuous Integration is the process of automating the building and testing of code every time one of the team members commits to version control.

   - CI stands for (Continuous Integration)

   -CD (Continuous Delivery as well as Deployment, Delivery is also known as release)


                            commit		     Initiate CI process
		         |---------------->Source code-----------------|
			 |					       |
			 |					       |
		    Development					      Build	
			 |					       |
			 |					       |
			 |-----------------Testing---------------------|
				Report			Test
 

* Popular Continuous Integration Tools (or) CICD

     - GitLab

     - Jenkins

     - Codeship

     - Travis CI

     - Bamboo

     - TeamCity



* CI/CD Services in AWS

   AWS provides several services for CI/CD such as:

      - CodeCommit

      - CodeDeploy

      - CodeBuild

      - CodePipeline

      - CodeGuru



* CI/CD Services in Azure

  Azure provides the following services:

    - Azure Boards

    - Azure Pipeline

    - Azure Repos

    - Azure Test

    - Azure Artifacts



* What is Jenkins?

Jenkins is a continuous integration tool that manages and controls processes such as planning, coding, building, testing, deploying, operating, and monitoring in a DevOps environment.

  - Jenkins is an automation server but will not do anything on its own until informed to do so.

  - Jenkins is developed using Java code.



* Why Jenkins is So Popular?

  1. Open source

  2. Good plugin support

  3. Good community support

  4. Fast and reliable

  5. Good OS support

  6. Scripted Builds




 * Jenkins Architecture: Source control management
 
                  git --→ Jenkins                                         
                            |                                             
                            |                           ________________  
___________________________________________________    |               |  | → Test Environment
|  ________________    _______________   ________  |    |Is branch test,|  |
| | Build+unitTest | → |Function Test| → |Deploy|  |    |release        |  | → Release Evironment
| ------------------   ---------------   --------  |    |     (or)      |  |
____________________________________________________    | production    |  | → Production Environment
                                                        ------------------ |


* Why We Need Plugins?

Plugins provide extra functionalities.



* Plugin Management in Jenkins

  1. Update: Shows updates to plugins already installed

  2. Available: Shows plugins that are available for installation

  3. Installed: Displays plugins that are installed and have no updates

  4. Advanced: Lists configuration of HTTP proxy, allows manual upload of plugins, and URL of plugin site



* Proxy Configuration in Jenkins

In real-time scenarios, installing plugins might face challenges due to proxy settings or VPN (Virtual Private Network). To avoid such issues, configure the HTTP proxy in Jenkins under the Advanced tab.



* How to Install Jenkins on Windows

  Jenkins can be installed using various methods:

    1. Using Docker

   2. Using Kubernetes

   3. Using WAR file

   4. Offline installation (Linux, Ubuntu, macOS)



* Prerequisites:

  - Minimum hardware requirements:

      - 256 MB of RAM

      - 1GB of drive space (although 10GB is recommended if running Jenkins as a Docker container)

 - Recommended hardware configuration for small teams:
      - 4GB+ of RAM

     - 50GB+ of drive space
    
     - A system running Windows 10
   
     - The latest copy of Java Development Kit (JDK) or Java Runtime Environment (JRE)
  
     - Access to an account with administrator privileges



* Jenkins Download Link

You can download Jenkins for Windows from [this URL](https://www.jenkins.io/download/) and choose the LTS (Long Term Support) version.



* Restart Jenkins

To safely restart Jenkins, use the URL: 

localhost:8080/safeRestart



 Terminology: Slaves, Nodes, Agents

The terms "Slaves," "Nodes," and "Agents" in Jenkins are the same and interchangeable.