                                                  * JENKINS *


 → Importance of Continous Integration :

     1. Improves Qulaity : Improves the quality by running multiple unit tests and analysing various static code
 
                           - ensuring that the code is always reliable, maintainable, and bug-free.


    
     2. Increases productivity : Automating build of code saves a lot of time, there by increasing productivity.

     3. Reduces Risk : Eliminate the risk of potential human errors by automating task.     



 
* Features of Jenkins :

      1. Easy installation process

      2. provides advance security

      3. optimized performance

      4. upgrades are easily available

      5. lightweight container support

      6. Distributed Team-Management
                       


* What is continuous Integration : It is the process of automating the building and testing of code, each time one of the team member commits to version control

    → CI (Continous Integration)

    → CD (Continous Delivery as well as Deployent), Delivery is also known as release.




                             commit		     Initiate CI process
		         |---------------->Source code-----------------|
			 |					       |
			 |					       |
		    Development	 	{work-flow}			      Build
			 |					       |
			 |					       |
			 |-----------------Testing---------------------|
				Report			Test




* Popular continuous integration tools (or) CICD :

     → Git lab                    → Jenkins

     → codeship                   → Travis CI

     → Bamboo                     → Teamcity



* From aws cloud if we wanted to perform CI/CD, there are various services like code-commit, code-deploy, code-build, code-pipeline, code-guru.


* In Azure - Azure Boards, Azure pipeline, Azure Repos, Azure Test, Azure Artifacts.




* What is Jenkins : Jenkins is a continuous integration which manages and control processes such as plan, code, build, test, deploy, operate and monitor in DevOps Environment.

                     → Jenkins is an automation server but it will not do anything on it's own until we inform to Jenkins.
                    
                     → Jenkins tool is developed by java code.




* Why Jenkins is so popular :

     1. open source

     2. good plugin support

     3. good community support

     4. Fast ans Reliable

     5. good OS support

     6. Scripted Builds





* Jenkins Architecture: Source control management

                  git --→ Jenkins                                         
                            |                                             
                            |                           ________________  
 ___________________________________________________    |               |  | → Test Environment
|  ________________    _______________   ________  |    |Is branch test,|  |
| | Build+unitTest | → |Function Test| → |Deploy|  |    |release        |  | → Release Evironment
| ------------------   ---------------   --------  |    |     (or)      |  |
____________________________________________________    | production    |  | → Production Environment
                                                        ------------------ |
  



* Why we need plugins.?

Ans: It is to have Extra functionalities




* Plugins Management in Jenkin's:

 
             |→ Update -→ Shows updates to plugins already installed 
             |
             |→ Available -→ Shows plugins that are available for installation
Tabs--→      |
             |→ Installed -→ Displays plugins installed that have no updates
             |
             |→ Advanced -→ Lists configuration of hhtp proxy allows manual upload of plugin and URL of plugin site.




* proxy : In Real time we cannot install the plugin 
          
          → reason : might be challenges with proxy setting's as well as VPN(virtual private Netwok) in orderd to avoid we should configure HTTP proxy in Jenkins plugin of advanced tab.




* How to install Jenkins on windows:

    Different ways to installation

       → using Docker

       → using Kubernetes

       → using war file

       → offline installation (Linux,ubuntu,macos).



 
* Prerequisites:

    Minimum hardware requirements:

       → 256 MB of RAM

       → 1GB of drive space (although 10GB is a recommended minimum if running Jenkins as a Docker container)


    Recommended hardware configuration for small team:

       → 4GB + of RAM

       → 50GB + of drive space

       → A system running Windows 10

       → The latest copy of Java Development Kit or Java Runtime Environment installed

       → Access to an account with administrator privileges



* We can dowmload Jenkins on windows using the URL(https://www.jenkins.io/download/) then we can choose LTS(Long Term Support)









             
             