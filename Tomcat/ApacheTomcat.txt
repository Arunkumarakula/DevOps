                                         * Apache Tomcat on Windows *



* Apache Tomcat is an open-source web server and servlet container used to deploy Java web applications.



* Prerequasites of Apache Tomcat :

      1. Java JRE(java runtime environment) installated and configured

      2. Administrator previlages

      3. Operating system.



* How to Install Tomcat on Windows :

  Step 1: Download Tomcat for Windows
     
      - Browse to the official Apache Tomcat website,Locate the Download section and click the latest Tomcat version available.

      - click the download link for the Windows Service Installer or the 32bit/64bit Windows zip file



 Step 2: Install Tomact

      - Install Tomcat via the Windows Service Installer for an automated and wizard-guided experience

      - After Downloading of the zip.file,depending on your windows version,unzip the downloaded file, Right-cliclk the file and select   

        extract all.

      - Navigate to the unzip file of apache tomcat 



* By default apache tomcat port number is 8080

     - if at all we wanted to change the default port number we need to go "apache tomacat(folder)-conf-server.xml



* server.xml(file)

       < connector port="8080" protocol ="HTTP/1.1"
                 connectionTimeout = "20000"
                      redirectport = "8443"/>


  - change the connector port number to any number between 1024 and 65535

  - port is used to approach (or) access the application 



* How to start and stop apache tomcat

   -To Start : Apache Tomcat-->bin-->startup (windows batch file)


   - To stop or shutdown: Apache Tomcat-->bin-->shutdown (windows batch file)

   - For configurational changes : Apache Tomcat-->conf

   - For hosting of the application (Artifacts / Deployable packages)
               
             - Apache tomcat-->Webapps

   - For Logs : Apache tomcat-->logs(Apache Tomcat and also application which is running inside Tomcat)



* We can access apache tomcat via localhost:8080 or 127.0.0.1:8080



* Apache Tomcat Folder structure :

  - Bin(Binaries) : To stop or Start the apache tomcat server

  - Conf(configurations) : To configure or modify any file eg: server.xml(To modify default port number)

  - Webapps : Used to deploy artifacts such as jar/war/ear

  - Lib(Libraries) :contains libraries that Tomcat needs to function properly

  - temp : Temporary files that Tomcat uses while running

  - logs : These logs provide information about server startup, errors, and request processing.



* How to access the application URL(127.0.0.1:8080) OR (localhost:8080)

         eg : localhost:8080/myproject   (Here where myproject is known as artifact)



* command to get the project:

         - mvn archetype:generate -DgroupId=com.example.helloworld -DartifactId=helloworld -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false




* How we can place the artifact from the maven project of target folder to apache tomcat webapps folder (using terminal)

       - cp <path where artifact> <path where webapps of tomcat>

                            (or)

       - cp <source> <destination>

                          (or)

        - <destination> cp /<source>



   - when we copy a files always we should give the forward slash(/)



* If we did any changes in configuration file (eg : 8080 to 8888) then we need to restart the tomcat server.(stop and start)


* To change the port number of apache tomcat we should stop the server.after changing port number you can start the server

   Reason : If the server is in running stage it will not receive modified port



* To deploy the application we have two ways 

   1. we can deploy an artifact manully in apache tomcat "webapps" folder 

   2. we can deploy an artifact by using the tomcat "gui"(graphical user interface)



* How can we access the apache tomcat gui:

   - We need to go apache tomcat home folder -->conf

   - modify "tomcat-user.xml" (using any text editor eg:vi)

   - vi tomcat-user.xml

          modify (<user username="admin">)

   - need to uncomment those lines <!-- & -->

   - once you modify user.xml file you need to save and quite (:wq!)






  








